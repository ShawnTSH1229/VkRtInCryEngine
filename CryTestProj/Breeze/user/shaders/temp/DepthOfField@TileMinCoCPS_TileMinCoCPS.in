/*
BgAAAHBzXzZfMAAADAAAAFRpbGVNaW5Db0NQUwICEAAAAEBAEAAAAIBAAQEAAAAAQMzMzAAAAAAAAAAA
*/

SamplerState TMCoC_SCoCSamp:register(s1, space0);
Texture2D<float4>TMCoC_SCoC:register(t0, space0);
cbuffer CBPerViewGlobal:register(b6)
{
  float4x4 CV_ViewProjZeroMatr;
  float4 CV_AnimGenParams;
  float4x4 CV_ViewProjMatr;
  float4x4 CV_ViewProjNearestMatr;
  float4x4 CV_InvViewProj;
  float4x4 CV_PrevViewProjMatr;
  float4x4 CV_PrevViewProjNearestMatr;
  float3x4 CV_ScreenToWorldBasis;
  float4 CV_TessInfo;
  float4 CV_WorldViewPosition;
  float4 CV_CameraRightVector;
  float4 CV_CameraFrontVector;
  float4 CV_CameraUpVector;
  float4 CV_ScreenSize;
  float4 CV_HPosScale;
  float4 CV_ProjRatio;
  float4 CV_NearestScaled;
  float4 CV_NearFarClipDist;
  float4 CV_SunLightDir;
  float4 CV_SunColor;
  float4 CV_SkyColor;
  float4 CV_FogColor;
  float4 CV_TerrainInfo;
  float4 CV_DecalZFightingRemedy;
  float4x4 CV_FrustumPlaneEquation;
  float4 CV_WindGridOffset;
  float4x4 CV_ViewMatr;
  float4x4 CV_InvViewMatr;
  float4x4 CV_ProjMatr;
  float4x4 CV_ProjMatrUnjittered;
};
cbuffer CBPerPassShadowGen:register(b5)
{
  float4 CP_ShadowGen_LightPos;
  float4 CP_ShadowGen_ViewPos;
  float4 CP_ShadowGen_DepthTestBias;
  float4 CP_ShadowGen_FrustumInfo;
  float4 CP_ShadowGen_VegetationAlphaClamp;
};
cbuffer CBPerPassCustom:register(b5)
{
  float4 CP_Custom_ViewMode;
};
cbuffer CB_SkinQuat_Cur:register(b2)
{
  float2x4 _g_SkinQuat_Cur[768];
};
cbuffer CB_SkinQuat_Prev:register(b3)
{
  float2x4 _g_SkinQuat_Prev[768];
};
half4 GetTexture2D(Texture2D tex,SamplerState samplerState,float2 uv)
{
  return tex.Sample(samplerState,uv);
}
struct vtxOutDownscaleDof
{
  float4 HPosition:SV_POSITION;
  float4 tc0:TEXCOORD0;
  float4 tc1:TEXCOORD1;
  float4 tc2:TEXCOORD2;
  float4 tc3:TEXCOORD3;
  float4 tc4:TEXCOORD4;
  float4 tc5:TEXCOORD5;
  float4 tc6:TEXCOORD6;
};
struct OutTileMinCoC
{
  float2 CocNearFar:SV_Target0;
};
OutTileMinCoC TileMinCoCPS(vtxOutDownscaleDof IN)
{
  OutTileMinCoC OUT=(OutTileMinCoC)0;
  float2 coc0=(GetTexture2D(TMCoC_SCoC,TMCoC_SCoCSamp,IN.tc0.xy).rg);
  float2 coc1=(GetTexture2D(TMCoC_SCoC,TMCoC_SCoCSamp,IN.tc0.zw).rg);
  float2 coc2=(GetTexture2D(TMCoC_SCoC,TMCoC_SCoCSamp,IN.tc1.xy).rg);
  float2 coc3=(GetTexture2D(TMCoC_SCoC,TMCoC_SCoCSamp,IN.tc1.zw).rg);
  float2 coc4=(GetTexture2D(TMCoC_SCoC,TMCoC_SCoCSamp,IN.tc2.xy).rg);
  float2 coc5=(GetTexture2D(TMCoC_SCoC,TMCoC_SCoCSamp,IN.tc2.zw).rg);
  float2 coc6=(GetTexture2D(TMCoC_SCoC,TMCoC_SCoCSamp,IN.tc3.xy).rg);
  float2 coc7=(GetTexture2D(TMCoC_SCoC,TMCoC_SCoCSamp,IN.tc3.zw).rg);
  OUT.CocNearFar.r=max(coc0.rg,max(coc1,max(coc2,coc3))).r;
  OUT.CocNearFar.g=min(coc0.rg,min(coc1,min(coc2,coc3))).g;
  OUT.CocNearFar.r=max(OUT.CocNearFar.rg,max(coc4,max(coc5,max(coc6,coc7)))).r;
  OUT.CocNearFar.g=min(OUT.CocNearFar.rg,min(coc4,min(coc5,min(coc6,coc7)))).g;
  return OUT;
}